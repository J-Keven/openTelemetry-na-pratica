version: '3.0'

services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: docker
      POSTGRES_USER: postgres
      POSTGRES_DB: encoder
    ports:
      - 5434:5432
    networks:
      - application

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - application

  # video_encode:
  #   build:
  #     context: ./video_encode
  #   container_name: video_encode
  #   volumes:
  #     - ./video_encode:/app
  #   depends_on:
  #     - postgres
  #     - rabbitmq
  #   networks:
  #     - application
  #     - observability

  video_admin:
    build:
      context: ./video_admin
    container_name: video_admin
    volumes:
      - ./video_admin:/app
    ports:
      - 3333:3333
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - application
      - observability

  # video_catalog:
  #   build:
  #     context: ./video_catalog
  #   container_name: video_catalog
  #   volumes:
  #     - ./video_catalog:/app
  #   ports:
  #     - 3334:3333
  #   depends_on:
  #     - postgres
  #     - rabbitmq
  #   networks:
  #     - application
  #     - observability

  jeager:
    image: jaegertracing/all-in-one:latest
    container_name: jeager
    environment:
      # SPAN_STORAGE_TYPE: elasticsearch
      # ES_SERVER_URLS: "https://observability.es.us-east-1.aws.found.io"
      # ES_USERNAME: elastic
      # ES_PASSWORD: eR5B3cMMklU3srbRtzXGJOll
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
      # COLLECTOR_OTLP_ENABLED: true
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      # - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      # - 9411:9411
    networks:
      - observability
  zipkin:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"
    networks:
      - observability

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - observability
      - application

  # Collector
  otel-collector:
    image: ${OTELCOL_IMG}
    restart: always
    command:
      [
        "--config=/etc/otel-collector-config.yaml",
        "${OTELCOL_ARGS}"
      ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jeager
      - zipkin
    networks:
      - observability
      - application

networks:
  observability:
    driver: bridge
  application:
    driver: bridge
